{"version":3,"sources":["actions/Product/AllProduct.js","actions/Promo/AllPromo.js","actions/Order/AllOrder.js","actions/Product/AddProduct.js","actions/Product/EditProduct.js","actions/Product/DeleteProduct.js","components/Products.js","actions/Cart/AddCart.js","components/financial.js","components/Home.js","actions/Cart/EditCart.js","actions/Cart/DeleteCart.js","components/Cart.js","actions/Promo/EditPromo.js","actions/Promo/DeletePromo.js","actions/Promo/AddPromo.js","components/Promo.js","actions/Order/AddOrder.js","actions/Cart/ResetCart.js","components/Checkout.js","actions/Order/EditOrder.js","components/Order.js","components/test-credentials.js","actions/User/AddUser.js","actions/User/UserLogOut.js","components/Login.js","components/test.js","components/Header.js","App.js","reportWebVitals.js","reducers/CartReducer.js","reducers/ProductReducer.js","reducers/PromoReducer.js","reducers/OrderReducer.js","reducers/UserReducer.js","reducers/rootReducer.js","reducers/store.js","index.js"],"names":["AllProduct","info","type","AllPromo","AllOrder","AddProduct","EditProduct","id","DeleteProduct","ViewProduct","props","Form","useForm","form","dispatch","useDispatch","useEffect","setFieldsValue","name","product","quantity","price","span","size","title","style","width","cover","src","image","onFinish","values","newProduct","axios","put","process","_id","then","res","catch","err","console","log","Item","label","rules","required","htmlType","onClick","resetFields","delete","layout","labelCol","wrapperCol","tailLayout","offset","Products","productsRaw","useSelector","state","products","map","r","Name","Quantity","Price","post","AddCart","financial","x","String","split","join","Number","arrR","arrR2","xCut","xCut2","xCut3","times","Math","floor","length","slice","push","reverse","forEach","item","MessengeQuantity","message","description","error","showIcon","closable","ViewList","history","useHistory","useState","hover","setHover","section_content","backgroundImage","hoverBackground","onMouseEnter","onMouseLeave","className","setVisible","newCart","onQuickShop","params","count","setCount","showMessenge","setShowMessenge","showMessengeCount","setShowMessengeCount","visible","messageWarning","addCart","centered","onOk","onCancel","cartTemp","onDecrement","LeftOutlined","onIncrement","RightOutlined","showDrawer","Home","setProducts","visibleDrawer","setVisibleDrawer","stateCart","a","get","result","data","fetchData","placement","onClose","carts","c","path","EditCart","DeleteCart","Cart","Text","Typography","change","setChange","total","setTotal","countPromo","setCountPromo","preTotal","setPreTotal","percent","setPercent","React","updateState","forceUpdate","useCallback","stateRoot","columns","dataIndex","responsive","render","all","align","alt","height","color","DeleteOutlined","onDelete","key","marginTop","marginBottom","justify","marginLeft","cartDest","findIndex","d","updateTotal","productDest","fail","victim","Modal","content","onReset","newTotal","sumSub","subtotal","sub","prod","filter","pro","to","pathname","undefined","p","dataSource","pagination","checkPromo","promos","code","Code","warning","success","disabled","EditPromo","DeletePromo","AddPromo","ViewPromo","promo","newPromo","Promo","statePromos","AddOrder","ResetCart","listData","Checkout","stateUser","users","stateProduct","n","temp","tempPreTotal","cart","location","status","author","uid","placeholder","pattern","RegExp","itemLayout","renderItem","EditOrder","ViewOrder","Option","Select","formRef","useRef","admin","setAdmin","headers","checkAdmin","setTimeout","order","orders","o","padding","paddingLeft","phone","address","ref","selected","value","Order","s","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AddUser","UserLogOut","Login","confirmCode","setConfirmCode","checkCode","setCheckCode","confirmLoading","setConfirmLoading","confirmLoadingPhone","setConfirmLoadingPhone","capcha","window","reCaptchaVerifier","firebase","auth","RecaptchaVerifier","callback","response","phoneNumber","appVerifier","signInWithPhoneNumber","confirmationResult","confirm","user","regexp","isSignedIn","displayName","app","signOut","fbAuthProvider","FacebookAuthProvider","signInWithRedirect","googleAuthProvider","GoogleAuthProvider","signInWithPopup","LoadingOutlined","test","Header","changePage","App","Layout","Content","Footer","Sider","resultProducts","resultPromos","resultOrders","resultAdmin","Promos","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","CartReducer","action","newData","concat","editCart","fixCart","ProductReducer","Product","editProduct","newStateAfterDelete","messenge","editPromo","OrderReducer","newOrder","editOrder","UserReducer","typeLogin","login","email","rootReducer","combineReducers","PromoReducer","store","createStore","rootReducers","serialisedState","localStorage","getItem","JSON","parse","e","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0871335d.chunk.js","sourcesContent":["const AllProduct = (info) => {\r\n    return{\r\n        type: 'ALL_PRODUCT',\r\n        info\r\n    }\r\n}\r\n\r\nexport default AllProduct","const AllPromo = (info) => {\r\n    return{\r\n        type: 'ALL_PROMO',\r\n        info\r\n    }\r\n}\r\n\r\nexport default AllPromo","const AllOrder = (info) => {\r\n    return{\r\n        type: 'ALL_ORDER',\r\n        info\r\n    }\r\n}\r\n\r\nexport default AllOrder","const AddProduct = (info) => {\n    return{\n        type: 'ADD_PRODUCT',\n        info\n    }\n}\n\nexport default AddProduct","const EditProduct = (id, info) => {\n    return{\n        type: 'EDIT_PRODUCT',\n        id,\n        info\n    }\n}\n\nexport default EditProduct","const DeleteProduct = (id) => {\n    return{\n        type: 'DELETE_PRODUCT',\n        id\n    }\n}\n\nexport default DeleteProduct","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button, Card, Row, Col, Image } from \"antd\";\r\nimport { useSelector , useDispatch} from 'react-redux'\r\nimport axios from 'axios'\r\nimport AddProduct from '../actions/Product/AddProduct'\r\nimport EditProduct from '../actions/Product/EditProduct'\r\nimport DeleteProduct from '../actions/Product/DeleteProduct'\r\n\r\nconst ViewProduct = (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        const newProduct = [\r\n            {\r\n                name: values.name,\r\n                quantity: values.quantity,\r\n                price: values.price,\r\n                image: '/images/ao_1.jpg'\r\n            }\r\n        ]\r\n        \r\n        axios.put(\r\n            `https://${process.env.REACT_APP_API}/product/${props.product._id}`, newProduct[0]\r\n        ).then(res => dispatch(EditProduct(props.product._id, res))).catch(err => console.log(err))\r\n    }\r\n    \r\n    const onDelete = (id) => {\r\n        axios.delete(\r\n            `https://${process.env.REACT_APP_API}/product/${id}`\r\n        ).then(res => dispatch(DeleteProduct(res))).catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            name: props.product.name,\r\n            quantity: props.product.quantity,\r\n            price: props.product.price,\r\n        })\r\n    }, [props]);\r\n\r\n    return(\r\n        <Col span={8}>\r\n            <Card size=\"small\" title={props.product.name} style={{ width: 300 }} cover={<Image\r\n                width={200}\r\n                src={props.product.image}\r\n            />}>\r\n                <Form onFinish={onFinish} form={form}>\r\n                    <Form.Item name=\"name\" label=\"Name\" rules={[{ required: true }]}>\r\n                        <Input type=\"text\"/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"quantity\" label=\"Quantity\" rules={[{ required: true }]}>\r\n                        <Input type=\"number\"/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"price\" label=\"Price\" rules={[{ required: true }]}>\r\n                        <Input type=\"number\"/>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                        <Button htmlType=\"button\" onClick={onReset}>\r\n                        Reset\r\n                        </Button>\r\n                        <Button htmlType=\"button\" onClick={() => onDelete(props.product._id)}>\r\n                        Delete\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\n\r\n\r\nconst Products = () => {\r\n        const productsRaw = useSelector(state => state.products);\r\n        const dispatch = useDispatch()\r\n        const [form] = Form.useForm();\r\n\r\n        const onFinish = values => {\r\n            const newProduct = [\r\n                {   \r\n                    name: values.Name,\r\n                    quantity: values.Quantity,\r\n                    price: values.Price,\r\n                    image: '/images/ao_1.jpg'\r\n                }\r\n            ]\r\n            axios.post(`https://${process.env.REACT_APP_API}/products`, newProduct[0]).then(res => dispatch(AddProduct(res))).catch(err => console.log(err))\r\n            form.resetFields();\r\n        };\r\n        \r\n        const onReset = () => {\r\n            form.resetFields();\r\n        };\r\n          \r\n        return(\r\n            <div>\r\n                <Row>\r\n                    {\r\n                        productsRaw.map(r => {\r\n                            return <ViewProduct key={r._id} product={r}></ViewProduct>\r\n                        })\r\n                    }\r\n                </Row>\r\n                <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n                    <Form.Item name=\"Name\" label=\"Name\" rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"Quantity\" label=\"Quantity\" rules={[{ required: true }]}>\r\n                        <Input type=\"number\" />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"Price\" label=\"Price\" rules={[{ required: true }]}>\r\n                        <Input type=\"number\" />\r\n                    </Form.Item>\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                        <Button htmlType=\"button\" onClick={onReset}>\r\n                        Reset\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Products","const AddCart = (info) => {\n    return{\n        type: 'ADD_CART',\n        info\n    }\n}\n\nexport default AddCart","export default function financial(x) {\n\n    x = String(x).split(\".\").join(\"\");\n\n    if(!Number(x)){\n        return null\n    }\n\n    let arrR = []\n    let arrR2 = []\n    let xCut = ''\n    let xCut2 = ''\n    let xCut3 = ''\n\n    let times =  Math.floor(String(x).length / 3)\n    if(Number(times)*3 === String(x).length){\n        xCut3 = String(x).slice(0, String(x).length - (Number(times)-1)*3)\n    }else{\n        xCut3 = String(x).slice(0, String(x).length - (Number(times))*3)\n    }\n    \n\n    while(true){\n        if(String(x).length > 3){\n            xCut = String(x).slice(String(x).length - 3, String(x).length)\n    \n            xCut2 = String(x).slice(0, String(x).length-3)\n    \n            x = String(x).slice(0, String(x).length-3)\n    \n            arrR.push(xCut)\n            arrR2.push(xCut2)\n        }else{\n            break\n        }\n    }\n\n    arrR2 = arrR2.reverse()\n    arrR = arrR.reverse()\n\n    if(arrR.length >= arrR2.length){\n        arrR.forEach(item => {\n            xCut3 = xCut3 + '.' + item\n        });\n    }else{\n        arrR2.forEach(item => {\n            xCut3 = xCut3 + '.' + item\n        });\n    }\n\n    return xCut3\n\n  }  ","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button, Alert, Modal, Drawer } from \"antd\";\r\nimport axios from 'axios'\r\nimport { LeftOutlined, RightOutlined} from '@ant-design/icons'\r\nimport AddCart from '../actions/Cart/AddCart'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport financial from './financial'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MessengeQuantity = (props) => {\r\n\r\n    return (\r\n        <Alert\r\n            message=\"Warning\"\r\n            description={`Quantity of ${props.error.name} max is ${props.error.quantity}`}\r\n            type=\"warning\"\r\n            showIcon\r\n            closable\r\n        />\r\n    )\r\n}\r\n\r\nconst ViewList = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const onQuickShop = (values) => {\r\n\r\n        const newCart = [{\r\n            id: values.product._id,\r\n            name: values.product.name,\r\n            quantity: 1,\r\n        }]\r\n\r\n        dispatch(AddCart(newCart))\r\n        history.push(\"cart\")\r\n    }\r\n\r\n    const section_content = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}${props.product.image})`,\r\n    }\r\n\r\n    const hoverBackground = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}'/images/3.jpg')`\r\n    }\r\n    \r\n\r\n    return(\r\n        <div onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} className=\"col-lg-3 col-md-3 col-sm-6 col-xs-6  \">\r\n            <div className=\"section_content-home\" style={{\r\n                ...section_content,\r\n                ...(hover ? hoverBackground : null)\r\n            }}>\r\n                <div className=\"box_content\" style={{\r\n                    ...section_content,\r\n                    ...(hover ? hoverBackground : null)\r\n                }}>\r\n                </div>\r\n                <div className=\"overlay\">\r\n                    <div className=\"icon\">\r\n                        <i className=\"far fa-heart\" />\r\n                    </div>\r\n                    <div className=\"botton\">\r\n                        <a className=\"view\" onClick={()=> props.setVisible(true)}>\r\n                            <div className=\"view-text\">Quick view</div>\r\n                            <div className=\"view-icon\">\r\n                                <i className=\"fas fa-eye\" />\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"view\" onClick={() => onQuickShop(props)}>\r\n                            <div className=\"view-text\">Quick shop</div>\r\n                            <div className=\"view-icon\">\r\n                                <i className=\"fas fa-cart-plus\" />\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"size\">\r\n                        XS, S, M, L, XL\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"price\">\r\n                <h3 className=\"headding\">{props.product.name}</h3>\r\n                <span className=\"price-content\">{financial(props.product.price)} vnđ</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ViewProduct (params) {\r\n    const [count, setCount] = useState(0);\r\n    const [showMessenge, setShowMessenge] = useState(false);\r\n    const [showMessengeCount, setShowMessengeCount] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const messageWarning = (<Alert\r\n        message=\"Warning\"\r\n        description=\"Quantity should not be less than 0\"\r\n        type=\"warning\"\r\n        showIcon\r\n        closable\r\n    />)\r\n\r\n    const addCart = (info) => {\r\n        dispatch(AddCart(info))\r\n    }\r\n\r\n    function onIncrement() {\r\n        if (params.product.quantity < count + 1) {\r\n            setShowMessengeCount(true)\r\n        } else {\r\n            setCount(count + 1)\r\n            setShowMessengeCount(false)\r\n            const cartTemp = [\r\n                {   \r\n                    id: params.product._id,\r\n                    name: params.product.name,\r\n                    quantity: count + 1\r\n                }\r\n            ];\r\n            addCart(cartTemp)\r\n        }\r\n        setShowMessenge(false)\r\n    }\r\n\r\n    function onDecrement() {\r\n        if (count !== 0 ) {\r\n            setCount(count - 1)\r\n            setShowMessenge(false)\r\n            const cartTemp = [\r\n                {   \r\n                    id: params.product._id,\r\n                    name: params.product.name,\r\n                    quantity: count - 1\r\n                }\r\n            ];\r\n            addCart(cartTemp)\r\n        }else{\r\n            setShowMessenge(true)\r\n        }\r\n        setShowMessengeCount(false)\r\n    }\r\n\r\n    const showDrawer = () => {\r\n        params.showDrawer()\r\n        setVisible(false)\r\n    }   \r\n    \r\n    return(\r\n        <div>\r\n            <ViewList key={params.product.id} product={params.product} setVisible={setVisible}></ViewList>\r\n            {\r\n                showMessenge && messageWarning\r\n            }\r\n            {\r\n                showMessengeCount && <MessengeQuantity key={params.product.id} error={params.product}></MessengeQuantity>\r\n            }\r\n            <Modal\r\n                title=\"Quick view\"\r\n                centered\r\n                visible={visible}\r\n                onOk={() => setVisible(false)}\r\n                onCancel={() => setVisible(false)}\r\n                width={1000}\r\n            >\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <ViewList key={params.product.id} product={params.product} setVisible={setVisible}></ViewList>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <Button onClick={() => {\r\n                                        onDecrement()\r\n                                    }}>\r\n                                        <LeftOutlined />\r\n                                    </Button> \r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <p>{count}</p>\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                <Button onClick={() => {\r\n                                        onIncrement()\r\n                                    }}>\r\n                                        <RightOutlined />\r\n                                    </Button> \r\n                                </Col>\r\n                                <Col>\r\n                                    <Button onClick={showDrawer}>Add to cart</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Home = () => {\r\n\r\n        const [products, setProducts] = useState([]);    \r\n        const [visibleDrawer, setVisibleDrawer] = useState(false);\r\n        const stateCart = useSelector(state => state)    \r\n        const history = useHistory()\r\n\r\n        const changePage = (path) => {\r\n            history.push(path)\r\n        }\r\n\r\n        const showDrawer = () => {\r\n            setVisibleDrawer(true);\r\n        };\r\n\r\n        const onClose = () => {\r\n            setVisibleDrawer(false);\r\n        };\r\n\r\n        useEffect(() => {\r\n            async function fetchData() {\r\n                const result = await axios.get(\r\n                    `https://${process.env.REACT_APP_API}/products`,\r\n                );\r\n                setProducts(result.data.Products);\r\n            }\r\n              fetchData();\r\n        }, []);\r\n    \r\n        return(\r\n          <div>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        \r\n                        products.map((product, id) => {\r\n                            return (\r\n                                <ViewProduct key={id} product={product} showDrawer={showDrawer}></ViewProduct> \r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n              </div>\r\n\r\n                <Drawer\r\n                    title=\"Cart\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={onClose}\r\n                    visible={visibleDrawer}\r\n                >\r\n                    {\r\n                        stateCart.carts.map(c => {\r\n                            return (\r\n                                <div key={c.name}>\r\n                                    <p>{c.name}</p>\r\n                                    <p>{c.quantity}</p>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <Button onClick={() => changePage(\"cart\")}>Go to cart</Button>\r\n                    {/* <Button onClick={() => changePage(\"checkout\")}>Check out</Button> */}\r\n                </Drawer>\r\n          </div>\r\n        )\r\n}\r\n\r\nexport default Home;","const EditCart = (id, count) => {\n    return{\n        type: 'EDIT_CART',\n        id,\n        count\n    }\n}\n\nexport default EditCart","const DeleteCart = (id) => {\n    return{\n        type: 'DELETE_CART',\n        id\n    }\n}\n\nexport default DeleteCart","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input, Button, Image, Row, Col, Table, Space, Tag, Modal, Typography, Divider } from \"antd\";\r\nimport { LeftOutlined, RightOutlined} from '@ant-design/icons'\r\nimport EditCart from '../actions/Cart/EditCart'\r\nimport DeleteCart from '../actions/Cart/DeleteCart'\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\nimport financial from './financial'\r\n  \r\nlet data = [];\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n  \r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Cart = () => {\r\n\r\n    const { Text } = Typography;\r\n\r\n    const [change, setChange] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [countPromo, setCountPromo] = useState(0);\r\n    const [preTotal, setPreTotal] = useState(0);\r\n    const [percent, setPercent] = useState(0);\r\n    const [,updateState] = React.useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch();\r\n    const stateRoot = useSelector(state => state);\r\n\r\n    const columns = [\r\n        {\r\n          title: 'PRODUCT',\r\n          dataIndex: 'product',\r\n          responsive: ['sm'],\r\n          render: (product, all) => (\r\n            <Row type=\"flex\" align=\"middle\">\r\n                <Space size=\"middle\">\r\n                    <Col span={12}>\r\n                        <Image src={`${product[1]}`} alt={product[0]} width={120} height={150}></Image>\r\n                    </Col>\r\n                    <Col>             \r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Tag color=\"green\">{product[0]}</Tag>\r\n                            </Col>\r\n                            <Col>\r\n                                <Tag color=\"volcano\">\r\n                                    <DeleteOutlined onClick={() => {\r\n                                        onDelete(all.key)\r\n                                    }} />\r\n                                </Tag>  \r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Space>\r\n            </Row>\r\n          ),\r\n        },\r\n        {\r\n            title: 'PRODUCT',\r\n            dataIndex: 'product',\r\n            responsive: [\"xs\"],\r\n            render: (product, all) => (\r\n                <Row type=\"flex\" align=\"middle\">\r\n                    <Space size=\"middle\">\r\n                        <Col>\r\n                            <Image src={`${product[1]}`} alt={product[0]}></Image>\r\n                        </Col>\r\n                        <Col>        \r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    <Tag color=\"green\">{product[0]}</Tag>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Tag color=\"volcano\">\r\n                                        <DeleteOutlined onClick={() => {\r\n                                            onDelete(all.key)\r\n                                        }} />\r\n                                    </Tag>  \r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}></div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Tag color=\"green\">{financial(all.price)} vnđ</Tag>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}></div>\r\n                            \r\n                            <Row>\r\n                                <Col span={6}>\r\n                                    <Tag color=\"green\" onClick={() => {\r\n                                        onDecrement(all.key)\r\n                                    }}>\r\n                                        <LeftOutlined />\r\n                                    </Tag> \r\n                                </Col>\r\n                                <Col span={8} type=\"flex\" align=\"center\" justify=\"center\" style={{ marginLeft: \"0.5em\" }}>\r\n                                    <p>{all.quantity}</p>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Tag color=\"green\" onClick={() => {\r\n                                        onIncrement(all.key)\r\n                                    }}>\r\n                                        <RightOutlined />\r\n                                    </Tag> \r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Space>\r\n                </Row>\r\n            ),\r\n        },\r\n        {\r\n          title: 'PRICE',\r\n          dataIndex: 'price',\r\n          responsive: ['sm'],\r\n          render: (price) => (\r\n            <Tag color=\"green\">{financial(price)} vnđ</Tag>\r\n          )\r\n        },\r\n        {\r\n          title: 'QUANTITY',\r\n          dataIndex: 'quantity',\r\n          responsive: ['sm'],\r\n          render: (quantity, all) => (\r\n            <Row type=\"flex\" align=\"middle\">\r\n                <Space size=\"small\">\r\n                    <Col span={6}>\r\n                        <Button onClick={() => {\r\n                            onDecrement(all.key)\r\n                        }}>\r\n                            <LeftOutlined />\r\n                        </Button> \r\n                    </Col>\r\n                    <Col span={24} type=\"flex\" align=\"center\" justify=\"center\" style={{marginTop: \"1em\"}}>\r\n                        <p>{quantity}</p>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Button onClick={() => {\r\n                            onIncrement(all.key)\r\n                        }}>\r\n                            <RightOutlined />\r\n                        </Button> \r\n                    </Col>\r\n                </Space>\r\n            </Row>\r\n          )\r\n        },\r\n        {\r\n            title: 'TOTAL',\r\n            dataIndex: 'total',\r\n            render: () => (\r\n                <Tag color=\"green\">\r\n                    {financial(total)} vnđ\r\n                </Tag>\r\n            )\r\n        },\r\n    ];\r\n\r\n    data = []\r\n\r\n    const onDecrement = (id) => {\r\n        const cartDest = data.findIndex(d => d.key === id)\r\n        updateTotal(-data[cartDest].price)\r\n        dispatch(EditCart(id, -1))\r\n        data[cartDest].quantity = stateRoot.carts[cartDest].quantity\r\n        data[cartDest].total = stateRoot.carts[cartDest].quantity * data[cartDest].price\r\n        forceUpdate()\r\n    }\r\n\r\n    const onIncrement = (id) => {\r\n\r\n        const cartDest = data.findIndex(d => d.key === id)\r\n        const productDest = stateRoot.products.findIndex(d => d._id === id)\r\n\r\n        if (data[cartDest].quantity >= stateRoot.products[productDest].quantity) {\r\n            fail(`Quantity of ${data[cartDest].name} max is ${stateRoot.products[productDest].quantity}`)\r\n        }else{\r\n            updateTotal(data[cartDest].price)\r\n            dispatch(EditCart(id, 1))\r\n            data[cartDest].quantity = stateRoot.carts[cartDest].quantity\r\n            data[cartDest].total = stateRoot.carts[cartDest].quantity * data[cartDest].price\r\n            forceUpdate()\r\n        }\r\n    }\r\n\r\n    const fail = (victim) => {\r\n        Modal.error({\r\n          title: 'Login fail',\r\n          content: `${victim}, try again !!!`,\r\n        });\r\n        forceUpdate()\r\n    }\r\n\r\n    const messageWarning = () => {\r\n        Modal.warning({\r\n          title: 'Warning',\r\n          content: `Code incorrect, try again !!!`,\r\n        });\r\n        forceUpdate()\r\n    }\r\n\r\n    const messageSuccess = () => {\r\n        Modal.success({\r\n          title: 'Success',\r\n          content: `Code correct, happy shoppping !!!`,\r\n        });\r\n        forceUpdate()\r\n    }\r\n\r\n    const onFinish = values => {\r\n        const checkPromo = stateRoot.promos.filter(p => p.code === values.Code)\r\n        if (checkPromo.length === 0) {\r\n            messageWarning()\r\n            onReset()\r\n        }else if(checkPromo[0].quantity > 0) {\r\n            setPercent(checkPromo[0].price/total)\r\n            setPreTotal(total)\r\n            if (total - checkPromo[0].price < 0) {\r\n                setCountPromo(countPromo + 1)\r\n                setTotal(0)\r\n            }else{\r\n                setTotal(total - checkPromo[0].price)\r\n                setCountPromo(countPromo + 1)\r\n            }\r\n            \r\n            messageSuccess()\r\n        }\r\n    };\r\n    \r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    const updateTotal = (newTotal) => {\r\n        setTotal(total + newTotal)\r\n    }\r\n\r\n    const onCheckout = () => {\r\n        setChange(1)\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        dispatch(DeleteCart(id))\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        let sumSub = 0;\r\n        const subtotal = stateRoot.carts.map(c => {\r\n            const prod = stateRoot.products.filter(pro => pro.name === c.name);\r\n            if (prod.length !== 0) {\r\n                let sub;\r\n                if (prod[0].quantity < c.quantity) {\r\n                    sub = prod[0].quantity*prod[0].price;\r\n                } else {\r\n                    sub = c.quantity*prod[0].price;\r\n                }\r\n                \r\n                sumSub += sub\r\n                return sumSub   \r\n            }\r\n        })\r\n        setTotal(sumSub)\r\n        return subtotal\r\n    }, [stateRoot])\r\n\r\n    return (\r\n        <div>\r\n            { change ? <Redirect to={{ pathname: \"/checkout\", data: total }} /> : null }\r\n\r\n            { stateRoot.carts === undefined ||\r\n                stateRoot.carts.map(c => {\r\n                    const product = stateRoot.products.filter(p => p._id === c.id)\r\n                    if(product){\r\n                        data.push({\r\n                            key: c.id,\r\n                            product: [c.name, product[0].image],\r\n                            price: product[0].price,\r\n                            quantity: c.quantity,\r\n                            total: product[0].price * c.quantity,  \r\n                        })\r\n                    }\r\n                })\r\n            }\r\n\r\n            <Table columns={columns} dataSource={data} pagination={false} />\r\n            <Row justify=\"space-around\">\r\n                <Col>\r\n                    <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n                        <Form.Item name=\"Code\" label=\"Code\" rules={[{ required: true }]}>\r\n                            <Input disabled={percent !== 0 && countPromo == 1 ? true : false} type=\"text\" />\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                    <p>\r\n                        SUBTOTAL: {\r\n                            percent !== 0 && countPromo == 1 && (\r\n                                <div>\r\n                                    <Text delete type=\"secondary\">{financial(preTotal)} vnđ </Text>\r\n                                    <Text type=\"success\">(giảm {Math.floor(percent)}%)</Text>\r\n                                    <br></br>\r\n                                    <Tag color=\"green\">\r\n                                        <Text  type=\"success\">{financial(total)} vnđ</Text>\r\n                                    </Tag>\r\n                                </div>\r\n                            ) || (\r\n                                <Tag color=\"green\">\r\n                                    <Text  type=\"success\">{financial(total)} vnđ</Text>\r\n                                </Tag>\r\n                            )\r\n                        }\r\n                    </p>\r\n                    <Button type=\"primary\" onClick={onCheckout}>\r\n                        Check Out\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart","const EditPromo = (id, info) => {\r\n    return{\r\n        type: 'EDIT_PROMO',\r\n        id,\r\n        info\r\n    }\r\n}\r\n\r\nexport default EditPromo","const DeletePromo = (id) => {\r\n    return{\r\n        type: 'DELETE_PROMO',\r\n        id\r\n    }\r\n}\r\n\r\nexport default DeletePromo","const AddPromo = (info) => {\n    return{\n        type: 'ADD_PROMO',\n        info\n    }\n}\n\nexport default AddPromo","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport EditPromo from '../actions/Promo/EditPromo'\r\nimport DeletePromo from '../actions/Promo/DeletePromo'\r\nimport AddPromo from '../actions/Promo/AddPromo'\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n  \r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst ViewPromo = (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n\r\n    const onFinish = values => {\r\n        const newPromo = [\r\n            {\r\n                name: values.name,\r\n                quantity: values.quantity,\r\n                price: values.price,\r\n                code: values.code\r\n            }\r\n        ]\r\n        \r\n        axios.put(\r\n            `https://${process.env.REACT_APP_API}/promotion/${props.promo._id}`, newPromo[0]\r\n        ).then(res => dispatch(EditPromo(props.promo._id, res))).catch(err => console.log(err))\r\n\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        axios.delete(\r\n            `https://${process.env.REACT_APP_API}/promotion/${id}`\r\n        ).then(res => dispatch(DeletePromo(res))).catch(err => console.log(err))\r\n    }\r\n    \r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            name: props.promo.name,\r\n            quantity: props.promo.quantity,\r\n            price: props.promo.price,\r\n            code: props.promo.code,\r\n        })\r\n    }, [props]);\r\n\r\n    return(\r\n        <>\r\n            <Form form={form} onFinish={onFinish}>\r\n                <Form.Item name=\"name\" label=\"Name\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"quantity\" label=\"Quantity\" rules={[{ required: true }]}>\r\n                    <Input type=\"number\" />\r\n                </Form.Item>\r\n                <Form.Item name=\"price\" label=\"Price\" rules={[{ required: true }]}>\r\n                    <Input type=\"number\" />\r\n                </Form.Item>\r\n                <Form.Item name=\"code\" label=\"Code\" rules={[{ required: true }]}>\r\n                    <Input type=\"text\" />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                    </Button>\r\n                    <Button htmlType=\"button\" onClick={onReset}>\r\n                    Reset\r\n                    </Button>\r\n                    <Button htmlType=\"button\" onClick={() => onDelete(props.promo._id)}>\r\n                    Delete\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst Promo = () => {\r\n\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n    const statePromos = useSelector(state => state.promos)\r\n\r\n    const onFinish = values => {\r\n        const newPromo = [\r\n            {\r\n                name: values.Name,\r\n                quantity: values.Quantity,\r\n                price: values.Price,\r\n                code: values.Code\r\n            }\r\n        ]\r\n\r\n        axios.post(\r\n            `https://${process.env.REACT_APP_API}/promotions`, newPromo[0]\r\n        ).then(res => dispatch(AddPromo(res))).catch(err => console.log(err))\r\n        onReset()\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                statePromos.map(p => {\r\n                    return(\r\n                        <ViewPromo key={p._id} promo={p}></ViewPromo>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n                <Form.Item name=\"Name\" label=\"Name\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"Quantity\" label=\"Quantity\" rules={[{ required: true }]}>\r\n                    <Input type=\"number\" />\r\n                </Form.Item>\r\n                <Form.Item name=\"Price\" label=\"Price\" rules={[{ required: true }]}>\r\n                    <Input type=\"number\" />\r\n                </Form.Item>\r\n                <Form.Item name=\"Code\" label=\"Code\" rules={[{ required: true }]}>\r\n                    <Input type=\"text\" />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                    </Button>\r\n                    <Button htmlType=\"button\" onClick={onReset}>\r\n                    Reset\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Promo","const AddOrder = (info) => {\n    return{\n        type: 'ADD_ORDER',\n        info\n    }\n}\n\nexport default AddOrder","const ResetCart = () => {\r\n    return{\r\n        type: 'RESET_CART'\r\n    }\r\n}\r\n\r\nexport default ResetCart","import React, { useState } from 'react'\r\nimport { Form, Input, Button, List, Badge, Image, Row, Col, Divider, Typography } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport AddOrder from '../actions/Order/AddOrder'\r\nimport ResetCart from '../actions/Cart/ResetCart'\r\n\r\nlet listData = [];\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n  \r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const { Text } = Typography;\r\n\r\n    const [form] = Form.useForm();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const stateCart = useSelector(state => state.carts);\r\n    const stateUser = useSelector(state => state.users);\r\n    const stateProduct = useSelector(state => state.products);\r\n\r\n    listData = []\r\n\r\n    const onFinish = values => {\r\n        values.cart = {stateCart}\r\n        values.subtotal = props.location.data\r\n        values.status = 'processing'\r\n        values.author = stateUser[0].uid\r\n        dispatch(ResetCart())\r\n        axios.post(`https://${process.env.REACT_APP_API}/orders`, values).then(res => dispatch(AddOrder(res))).catch(err => console.log(err))\r\n        form.resetFields();\r\n        history.push(\"/\")\r\n    };\r\n\r\n    const regexp = /((09|03|07|08|05)+([0-9]{8})\\b)/g;\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                stateCart.map((c, n) => {\r\n                    const temp = stateProduct.filter(p => p._id === c.id)\r\n                    if(n !== 0){\r\n                        const tempPreTotal = listData[n-1].total[1]\r\n                        listData.push({\r\n                            key: temp[0]._id,\r\n                            name: temp[0].name,\r\n                            quantity: c.quantity,\r\n                            total: [c.quantity * temp[0].price, tempPreTotal + c.quantity * temp[0].price],\r\n                            image: temp[0].image,\r\n\r\n                        })\r\n                    }else{\r\n                        listData.push({\r\n                            key: temp[0]._id,\r\n                            name: temp[0].name,\r\n                            quantity: c.quantity,\r\n                            total: [c.quantity * temp[0].price, c.quantity * temp[0].price],\r\n                            image: temp[0].image,\r\n\r\n                        })   \r\n                    }\r\n                })\r\n            }\r\n            <Row justify=\"space-between\">\r\n                <Col span={12}>\r\n                <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n                    <Form.Item name=\"name\" label=\"Name\" rules={[{ required: true }]}>\r\n                        <Input type=\"text\" placeholder=\"Nguyễn Văn A\" />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"phone\" label=\"Phone\" rules={[{ required: true, pattern: new RegExp(regexp), message: \"Wrong phone number!\" }]}>\r\n                        <Input type=\"text\" placeholder=\"0909259713\" />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"address\" label=\"Address\" rules={[{ required: true }]}>\r\n                        <Input type=\"text\" placeholder=\"139 Xuân Hồng\" />\r\n                    </Form.Item>\r\n                    \r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Order\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                </Col>\r\n                <Col span={1}>\r\n                    \r\n                </Col>\r\n                <Col span={11}>\r\n                    <List\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        dataSource={listData}\r\n                        renderItem={item => (\r\n                            <List.Item\r\n                                key={item.key}\r\n                            >\r\n                                <Row justify=\"space-between\" align=\"middle\">\r\n                                    <Col span=\"8\">\r\n                                        <Row justify=\"space-between\" align=\"middle\">\r\n                                            <Col span={12}>\r\n                                                <Badge count={item.quantity}>\r\n                                                    <Image\r\n                                                        width=\"4.6em\"\r\n                                                        height=\"6em\"\r\n                                                        alt=\"logo\"\r\n                                                        src={item.image}\r\n                                                    />\r\n                                                </Badge>\r\n                                            </Col>\r\n                                            <Col span={12}>\r\n                                                <Text>{item.name}</Text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col span=\"14\">\r\n                                        <Text>{item.total[0]} vnđ</Text>\r\n                                    </Col>\r\n                                </Row>\r\n                            </List.Item>\r\n                        )}\r\n                    >\r\n\r\n                    </List>\r\n                    <Divider></Divider>\r\n                    <List\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        dataSource={listData}\r\n                        renderItem={(item, n) => {\r\n                            if(n === listData.length-1){\r\n                                return(\r\n                                    <List.Item\r\n                                        key={item.key}\r\n                                    >\r\n                                        <Row justify=\"space-between\" align=\"middle\">\r\n                                            <Col span=\"8\">\r\n                                                <Row justify=\"space-between\" align=\"middle\">\r\n                                                    <Col>\r\n                                                        <Text>Total:</Text>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col span=\"14\">\r\n                                                <Text>{listData[listData.length-1].total[1]} vnđ</Text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </List.Item>\r\n                                )\r\n                            }\r\n                        }}\r\n                    >\r\n\r\n                    </List>    \r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","const EditOrder = (id, info) => {\r\n    return{\r\n        type: 'EDIT_ORDER',\r\n        id,\r\n        info\r\n    }\r\n}\r\n\r\nexport default EditOrder","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Select, Button, Descriptions, Typography, Table, Row, Col, Space, Tag, Image, Divider, Badge } from 'antd'\r\nimport axios from 'axios'\r\nimport EditOrder from '../actions/Order/EditOrder'\r\n\r\nlet data = [];\r\n  \r\nconst tailLayout = {\r\n    wrapperCol: { offset: 22, span: 24 },\r\n};\r\n\r\nconst ViewOrder = (props) => {\r\n\r\n    const { Text } = Typography;\r\n    const [form] = Form.useForm();\r\n    const [total, setTotal] = useState(0);\r\n    const Option = Select.Option;\r\n    const formRef = useRef(null);\r\n    const dispatch = useDispatch()\r\n    const stateUser = useSelector(state => state.users)\r\n    const stateProduct = useSelector(state => state.products)\r\n    const stateRoot = useSelector(state => state);\r\n    const [admin, setAdmin] = useState(false)\r\n\r\n    const columns = [\r\n        {\r\n          title: 'PRODUCT',\r\n          dataIndex: 'product',\r\n          responsive: ['sm'],\r\n          render: (product) => (\r\n            <Row type=\"flex\" align=\"middle\">\r\n                <Space size=\"middle\">\r\n                    <Col span={12}>\r\n                        <Image src={`${product[1]}`} alt={product[0]} width={120} height={150}></Image>\r\n                    </Col>\r\n                    <Col>             \r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Tag color=\"green\">{product[0]}</Tag>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Space>\r\n            </Row>\r\n          ),\r\n        },\r\n        {\r\n            title: 'PRODUCT',\r\n            dataIndex: 'product',\r\n            responsive: [\"xs\"],\r\n            render: (product, all) => (\r\n                <Row type=\"flex\" align=\"middle\">\r\n                    <Space size=\"middle\">\r\n                        <Col>\r\n                            <Badge count={all.quantity}>\r\n                                <Image src={`${product[1]}`} alt={product[0]}></Image>\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>        \r\n                            <Row>\r\n                                <Col>\r\n                                    <Tag color=\"green\">{product[0]}</Tag>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}></div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Tag color=\"green\">{all.price} vnđ</Tag>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}></div>\r\n                        </Col>\r\n                    </Space>\r\n                </Row>\r\n            ),\r\n        },\r\n        {\r\n          title: 'PRICE',\r\n          dataIndex: 'price',\r\n          responsive: ['sm'],\r\n        },\r\n        {\r\n          title: 'QUANTITY',\r\n          dataIndex: 'quantity',\r\n          responsive: ['sm'],\r\n          render: (quantity) => (\r\n            <Row type=\"flex\" align=\"stretch\">\r\n                <Col type=\"flex\" align=\"center\" justify=\"center\" style={{marginTop: \"1em\"}}>\r\n                    <Tag color=\"green\">{quantity}</Tag>\r\n                </Col>\r\n            </Row>\r\n          )\r\n        },\r\n        {\r\n            title: 'TOTAL',\r\n            dataIndex: 'total',\r\n            render: () => (\r\n                <Tag color=\"green\">\r\n                    {total} vnđ\r\n                </Tag>\r\n            )\r\n        },\r\n    ];\r\n\r\n    data = []\r\n\r\n    \r\n    const checkAdmin = (res) => {\r\n        setAdmin(res.data.admin)\r\n    }\r\n\r\n    axios.get(\r\n        `https://${process.env.REACT_APP_API}/admin`, {\r\n          headers: {\r\n            'uid': stateUser[0].uid\r\n          }\r\n        }\r\n    ).then(res => checkAdmin(res)).catch(err => console.log(err))\r\n\r\n    const onFinish = values => {\r\n        console.log(values)\r\n        const newProduct = [\r\n            {\r\n                status: values.status\r\n            }\r\n        ]\r\n        axios.put(`https://${process.env.REACT_APP_API}/order/${props.order._id}`, newProduct[0]).then(res => dispatch(EditOrder(props.order._id, res))).catch(err => console.log(err))\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            form.setFieldsValue({\r\n                status: props.order.status,\r\n            })\r\n        }, 600);\r\n\r\n        let sumSub = 0;\r\n        const subtotal = stateRoot.orders.map(o => {\r\n            if (o.author === props.order.author && o._id === props.order._id) {\r\n                o.cart.stateCart.map(c => {\r\n                    const prod = stateRoot.products.filter(pro => pro.name === c.name);\r\n                    if(prod.length !== 0){\r\n                        let sub;\r\n                        if (prod[0].quantity < c.quantity) {\r\n                            sub = prod[0].quantity*prod[0].price;\r\n                        } else {\r\n                            sub = c.quantity*prod[0].price;\r\n                        }\r\n                        \r\n                        sumSub += sub\r\n                        return sumSub\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        setTotal(sumSub)\r\n        return subtotal\r\n\r\n    }, [props, stateRoot]);\r\n    \r\n    return(\r\n        <div style={{ padding: \"1em\" }}>\r\n                <Descriptions style={{ paddingLeft: \"1em\" }}>\r\n                    <Descriptions.Item label=\"Name\">{props.order.name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Phone\">{props.order.phone}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Address\">{props.order.address}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Total\">{props.order.subtotal}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Status\">{props.order.status}</Descriptions.Item>\r\n                </Descriptions>\r\n                {\r\n                    props.order.cart.stateCart.map(c => {\r\n                        const product = stateProduct.filter(p => p._id === c.id)\r\n                        if(product){\r\n                            data.push({\r\n                                key: c.id,\r\n                                product: [c.name, product[0].image],\r\n                                price: product[0].price,\r\n                                quantity: c.quantity,\r\n                                total: product[0].price * c.quantity,  \r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n\r\n                <Table columns={columns} dataSource={data} pagination={false} />\r\n                <Text>SUBTOTAL: </Text>\r\n                <Tag color=\"green\">\r\n                    <Text type=\"success\">{total} vnđ</Text>\r\n                </Tag>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <Divider></Divider>\r\n            \r\n            {\r\n                admin && (\r\n                    <Form form={form} name=\"control-hooks\" onFinish={onFinish} ref={formRef}>\r\n                        <Form.Item name=\"status\" label=\"Status\" rules={[{ required: true }]}>\r\n                            <Select>\r\n                                <Option selected value={props.order.status}>{props.order.status}</Option>\r\n                                <Option value={props.order.status !== \"processing\" ? \"processing\" : \"delivered\"}>{props.order.status !== \"processing\" ? \"processing\" : \"delivered\"}</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Order = () => {\r\n\r\n    const stateRoot = useSelector(state => state.orders);\r\n    const stateUser = useSelector(state => state.users)\r\n    const [admin, setAdmin] = useState(false)\r\n    const checkAdmin = (res) => {\r\n        setAdmin(res.data.admin)\r\n    }\r\n\r\n    axios.get(\r\n        `https://${process.env.REACT_APP_API}/admin`, {\r\n          headers: {\r\n            'uid': stateUser[0].uid\r\n          }\r\n        }\r\n    ).then(res => checkAdmin(res)).catch(err => console.log(err))\r\n\r\n    return (\r\n        <div>\r\n            {/* <Header name=\"Order\"></Header> */}\r\n            {\r\n                stateRoot.map(s => {\r\n                    if(s.author === stateUser[0].uid && admin === false) {\r\n                        return <ViewOrder key={s._id} order={s}></ViewOrder>\r\n                    }\r\n                })\r\n            }\r\n\r\n            {\r\n                stateRoot.map(s => {\r\n                    if(admin === true) {\r\n                        return <ViewOrder key={s._id} order={s}></ViewOrder>\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order\r\n","export const config = {\r\n    apiKey: \"AIzaSyDWlnIcNF6jdZHVmonA2HnO-cElIsj8Dyc\",\r\n    authDomain: \"lixiv2.firebaseapp.com\",\r\n    projectId: \"lixiv2\",\r\n    storageBucket: \"lixiv2.appspot.com\",\r\n    messagingSenderId: \"71712373613\",\r\n    appId: \"1:71712373613:web:482927516e8c76045ef864\",\r\n    measurementId: \"G-W7TTRGRXNC\"\r\n};","const AddUser = (info) => {\r\n    return{\r\n        type: 'ADD_USER',\r\n        info\r\n    }\r\n}\r\n\r\nexport default AddUser","const UserLogOut = () => {\r\n    return{\r\n        type: 'USER_LOGOUT'\r\n    }\r\n}\r\n\r\nexport default UserLogOut","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer\r\n} from \"@react-firebase/auth\";\r\nimport firebase from \"firebase/app\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport \"firebase/auth\";\r\nimport { Button, Form, Input, Modal, Space } from 'antd'\r\nimport { config } from \"./test-credentials\";\r\nimport AddUser from '../actions/User/AddUser'\r\nimport UserLogOut from '../actions/User/UserLogOut'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Login = () => {\r\n\r\n  const [form] = Form.useForm();\r\n  const [formCode] = Form.useForm();\r\n  const dispatch = useDispatch()\r\n  const [confirmCode, setConfirmCode] = useState({});\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [checkCode, setCheckCode] = useState(false);\r\n  const [,updateState] = React.useState();\r\n  const forceUpdate = useCallback(() => updateState({}), []);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [confirmLoadingPhone, setConfirmLoadingPhone] = useState(false);\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n  };\r\n\r\n  const success = (victim) => {\r\n    Modal.success({\r\n      title: 'Login Success',\r\n      content: `Login with ${victim} success, happy shopping !!!`,\r\n    });\r\n  }\r\n\r\n  const successCode = () => {\r\n    Modal.success({\r\n      title: 'Send verify code success',\r\n      content: `Please wait for an SMS to be delivered to your phone. The SMS will contain a 6-digit verification code, which you can enter on the verification screen.`,\r\n    });\r\n  }\r\n  \r\n  const fail = (victim) => {\r\n    Modal.error({\r\n      title: 'Login fail',\r\n      content: `${victim}, try again !!!`,\r\n    });\r\n    forceUpdate()\r\n  }\r\n\r\n  const capcha = (values) => {\r\n    window.reCaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\r\n      size: 'invisible',\r\n      callback: function (response) {\r\n        successCode()\r\n        setCheckCode(true)\r\n        setConfirmLoadingPhone(false)\r\n      }\r\n    });\r\n\r\n    const phoneNumber = values.phone;\r\n\r\n    const appVerifier = window.reCaptchaVerifier;\r\n    firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n        .then((confirmationResult) => {\r\n          setConfirmCode(confirmationResult)\r\n      }).catch((error) => {\r\n        fail(error)\r\n      });\r\n  }\r\n\r\n  const onFinish = values => {\r\n    \r\n    window.confirmationResult = confirmCode\r\n    window.confirmationResult.confirm(values.code).then((result) => {\r\n\r\n      success(\"Phone\")\r\n      setConfirmLoadingPhone(false)\r\n      dispatch(AddUser(result.user))\r\n\r\n    }).catch((error) => {\r\n      fail(error)\r\n    });\r\n\r\n  };\r\n\r\n  const regexp = /(\\+(84)+(9|3|7|8|5)+([0-9]{8})\\b)/g;\r\n\r\n  return (\r\n    <div>\r\n      <FirebaseAuthProvider {...config} firebase={firebase}>\r\n        <div>\r\n          <FirebaseAuthConsumer>\r\n            {({ isSignedIn, firebase, user }) => {\r\n              if (isSignedIn === true && user !== null) {\r\n                return (\r\n                  <div>\r\n                    <h2>You're signed in, welcome {user.displayName} 🎉 </h2>\r\n                    <Button\r\n                      onClick={() => {\r\n                        firebase\r\n                          .app()\r\n                          .auth()\r\n                          .signOut();\r\n                          dispatch(UserLogOut())\r\n                      }}\r\n                    >\r\n                      Sign out\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div>\r\n                    <h2>You're not signed in </h2>\r\n                    <Button\r\n                      onClick={() => {\r\n                          const fbAuthProvider = new firebase.auth.FacebookAuthProvider\r\n                          firebase.auth().signInWithRedirect(fbAuthProvider);\r\n                      }}\r\n                    >\r\n                      Sign in FB\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        handleOk()\r\n                        const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n                        firebase.auth().signInWithPopup(googleAuthProvider).then(res => {\r\n                          dispatch(AddUser(res.user))\r\n                          setConfirmLoading(false)\r\n                          success(\"Google\")\r\n                        }).catch(err => {\r\n                          setConfirmLoading(false);\r\n                          fail(err)}\r\n                        );\r\n                      }}\r\n                    >\r\n                      Sign in with Google {confirmLoading && <LoadingOutlined />}\r\n                    </Button>\r\n                    <div id=\"recaptcha-container\">\r\n                    {\r\n                      checkCode && (\r\n                        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n                          <Form.Item name=\"code\" label=\"Code\" rules={[{ required: true }]}>\r\n                            <Input />\r\n                          </Form.Item>\r\n                          <Form.Item {...tailLayout}>\r\n                              <Button type=\"primary\" htmlType=\"submit\" onClick={() => {\r\n                                setConfirmLoadingPhone(true)\r\n                              }}>\r\n                              Login with Phone {confirmLoadingPhone && <LoadingOutlined />}\r\n                              </Button>\r\n                          </Form.Item>\r\n                        </Form>\r\n                      ) || (\r\n                        <Form {...layout} form={form} name=\"control-hooks\" onFinish={capcha}>\r\n                        <Form.Item name=\"phone\" label=\"Phone\" rules={[{ required: true, pattern: new RegExp(regexp), message: \"Wrong phone number, format phone number: +84xxxxxxxxx\" }]}>\r\n                            <Input type=\"text\" />\r\n                        </Form.Item>\r\n                          <Form.Item {...tailLayout}>\r\n                              <Button type=\"primary\" htmlType=\"submit\" onClick={() => {\r\n                                setConfirmLoadingPhone(true)\r\n                              }}>\r\n                              Send Code {confirmLoadingPhone && <LoadingOutlined />}\r\n                              </Button>\r\n                          </Form.Item>\r\n                        </Form>\r\n                      )\r\n                    }\r\n                    <div id=\"sign-in-button\"></div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }}\r\n          </FirebaseAuthConsumer>\r\n        </div>\r\n      </FirebaseAuthProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login","import React from 'react'\r\n\r\nconst test = () => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>a</li>\r\n                <li>b</li>\r\n                <li>c</li>\r\n                <li>d</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default test\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport { Button} from \"antd\";\r\nimport axios from 'axios'\r\n\r\nconst Header = (props) => {\r\n\r\n    const stateUser = useSelector(state => state.users)\r\n    const [admin, setAdmin] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    const changePage = (path) => {\r\n        history.push(path)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await axios.get(\r\n                `https://${process.env.REACT_APP_API}/admin`, {\r\n                  headers: {\r\n                    'uid': stateUser[0].uid\r\n                  }\r\n                }\r\n            );\r\n            setAdmin(result.data.admin);\r\n        }\r\n          fetchData();\r\n    }, [stateUser]);\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={() => {\r\n                changePage(\"/\")\r\n            }}>\r\n                Home\r\n            </Button>\r\n            {\r\n                admin &&\r\n                <Button onClick={() => {\r\n                    changePage(\"/products\")\r\n                }}>\r\n                    Products\r\n                </Button>\r\n            }\r\n            <Button onClick={() => {\r\n                changePage(\"/cart\")\r\n            }}>\r\n                Cart\r\n            </Button>\r\n            {\r\n                admin &&\r\n                <Button onClick={() => {\r\n                    changePage(\"/promotions\")\r\n                }}>\r\n                    Promo\r\n                </Button>\r\n            }\r\n\r\n            <Button onClick={() => {\r\n                changePage(\"/orders\")\r\n            }}>\r\n                Order\r\n            </Button>\r\n            <Button onClick={() => {\r\n                changePage(\"/login\")\r\n            }}>\r\n                Login\r\n            </Button>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport AllProduct from './actions/Product/AllProduct'\r\nimport AllPromo from './actions/Promo/AllPromo'\r\nimport AllOrder from './actions/Order/AllOrder'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Products from './components/Products'\r\nimport Home from './components/Home'\r\nimport Cart from './components/Cart'\r\nimport Promo from './components/Promo'\r\nimport Checkout from './components/Checkout'\r\nimport Order from './components/Order'\r\nimport Login from './components/Login'\r\nimport test from './components/test'\r\nimport HeaderRaw from './components/Header'\r\nimport './App.css';\r\nimport { Layout } from 'antd'\r\n\r\nfunction App() {\r\n\r\n  const { Header, Content, Footer, Sider } = Layout;\r\n\r\n  const dispatch = useDispatch()\r\n  const stateUser = useSelector(state => state.users)\r\n  const [admin, setAdmin] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n        const resultProducts = await axios.get(\r\n            `https://${process.env.REACT_APP_API}/products`,\r\n        );\r\n\r\n        const resultPromos = await axios.get(\r\n          `https://${process.env.REACT_APP_API}/promotions`\r\n        );\r\n\r\n        const resultOrders = await axios.get(\r\n          `https://${process.env.REACT_APP_API}/orders`,\r\n        );\r\n\r\n        const resultAdmin = await axios.get(\r\n          `https://${process.env.REACT_APP_API}/admin`, {\r\n            headers: {\r\n              'uid': stateUser[0].uid\r\n            }\r\n          }\r\n      );\r\n      setAdmin(resultAdmin.data.admin);\r\n\r\n        dispatch(AllProduct(resultProducts.data.Products));\r\n        dispatch(AllPromo(resultPromos.data.Promos));\r\n        dispatch(AllOrder(resultOrders.data.Order));\r\n    }\r\n    fetchData();\r\n    \r\n  }, [stateUser]);\r\n\r\n  return (\r\n    <Layout className=\"App\">\r\n          <BrowserRouter>\r\n          <Header>\r\n            <HeaderRaw></HeaderRaw>\r\n          </Header>\r\n          <Content>\r\n        <Switch>\r\n        \r\n          <Route exact path=\"/\" component={Home}></Route>\r\n          {\r\n            admin && (\r\n                <Route path=\"/products\" component={Products}></Route>\r\n            )\r\n          }\r\n          <Route path=\"/cart\" component={Cart}></Route>\r\n          {\r\n            admin && (\r\n                <Route path=\"/promotions\" component={Promo}></Route>\r\n            )\r\n          }\r\n          <Route path=\"/checkout\" component={Checkout}></Route>\r\n          <Route path=\"/orders\" component={Order}></Route>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/test\" component={test}></Route>\r\n        </Switch>\r\n        </Content>\r\n      </BrowserRouter>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = []\r\n\r\nconst CartReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_CART':\r\n            const data = action.info\r\n            const newData = state.filter(s =>s.name !== data[0].name)\r\n            let NewCart\r\n\r\n            if (data[0].quantity === 0) {\r\n                NewCart = newData\r\n            }else{\r\n                NewCart = [].concat(newData, data)   \r\n            }\r\n            return NewCart\r\n        case 'RESET_CART':\r\n            return [];\r\n        case 'EDIT_CART':\r\n            let editCart = state.findIndex(c => c.id === action.id)\r\n            state[editCart].quantity = state[editCart].quantity + action.count\r\n            if (state[editCart].quantity <= 0) {\r\n                let fixCart = state.filter(c => c.id !== action.id)\r\n                return fixCart\r\n            }\r\n\r\n            return state\r\n        case 'DELETE_CART':\r\n            const newCart = state.filter(s => s.id !== action.id)\r\n            return newCart\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default CartReducer","const initState = []\r\n\r\nconst ProductReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ALL_PRODUCT':\r\n            const data = action.info\r\n            return data\r\n        case 'ADD_PRODUCT':\r\n            const newProduct = [].concat(state, action.info.data.Product)\r\n            return newProduct\r\n        case 'EDIT_PRODUCT':\r\n            const editProduct = state.findIndex(p => p._id === action.id)\r\n            state[editProduct] = action.info.data.Product\r\n            return state\r\n        case 'DELETE_PRODUCT':\r\n            const newStateAfterDelete = state.filter(d => d._id !== action.id.data.messenge)\r\n            return newStateAfterDelete\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default ProductReducer","const initState = []\r\n\r\nconst ProductReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ALL_PROMO':\r\n            const data = action.info\r\n            return data\r\n        case 'ADD_PROMO':\r\n            const newPromo = [].concat(state, action.info.data.Promo)\r\n            return newPromo\r\n        case 'EDIT_PROMO':\r\n            const editPromo = state.findIndex(p => p._id === action.id)\r\n            state[editPromo] = action.info.data.Promo\r\n            return state\r\n        case 'DELETE_PROMO':\r\n            const newStateAfterDelete = state.filter(d => d._id !== action.id.data.messenge)\r\n            return newStateAfterDelete\r\n        case 'EMPTY_PROMO':\r\n            return []\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default ProductReducer","const initState = []\r\n\r\nconst OrderReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ALL_ORDER':\r\n            const data = action.info\r\n            return data\r\n        case 'ADD_ORDER':\r\n            const newOrder = [].concat(state, action.info.data.Order)\r\n            return newOrder\r\n        case 'EDIT_ORDER':\r\n            const editOrder = state.findIndex(p => p._id === action.id)\r\n            state[editOrder].status = action.info.data.Order.status\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default OrderReducer","import axios from 'axios'\r\n\r\nconst initState = [\r\n    {\r\n        \"displayName\": \"\",\r\n        \"email\": \"\",\r\n        \"phoneNumber\": \"\",\r\n        \"uid\": \"\",\r\n        \"type\": \"\"\r\n    }\r\n]\r\n\r\nconst UserReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ALL_USER':\r\n            const data = action.info\r\n            return data\r\n        case 'ADD_USER':\r\n            \r\n            try {\r\n                const typeLogin = action.info\r\n                let login = {\r\n                    displayName: typeLogin.displayName,\r\n                    email: typeLogin.email,\r\n                    phoneNumber: typeLogin.phoneNumber,\r\n                    uid: typeLogin.uid\r\n                }\r\n                const newOrder = [login]\r\n                axios.post(`https://${process.env.REACT_APP_API}/user`, login).then(res => console.log(res)).catch(err => console.log(err))\r\n    \r\n                return newOrder\r\n            } catch (error) {\r\n                console.log(error)\r\n                return state\r\n            }\r\n        case 'USER_LOGOUT':\r\n            return initState\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default UserReducer","import CartReducer from './CartReducer'\r\nimport ProductReducer from './ProductReducer'\r\nimport PromoReducer from './PromoReducer'\r\nimport OrderReducer from './OrderReducer'\r\nimport UserReducer from './UserReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    carts: CartReducer,\r\n    products: ProductReducer,\r\n    promos: PromoReducer,\r\n    orders: OrderReducer,\r\n    users: UserReducer,\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\";\r\nimport rootReducers from \"./rootReducer\";\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem(\"persistantState\", serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem(\"persistantState\");\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(rootReducers, loadFromLocalStorage());\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n// import rootReducer from './reducers/rootReducer'\nimport store from './reducers/store'\n\n// const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: httpss://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}